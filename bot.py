import os
import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InputFile

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –•—ç–Ω–¥–ª–µ—Ä —Å—Ç–∞—Ä—Ç–∞
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["üì∏ Make It Special", "üåø Nature"]
    keyboard.add(*buttons)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏:", reply_markup=keyboard)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
user_mode = {}

@dp.message_handler(lambda message: message.text in ["üì∏ Make It Special", "üåø Nature"])
async def choose_mode(message: types.Message):
    mode = "face" if message.text == "üì∏ Make It Special" else "nature"
    user_mode[message.from_user.id] = mode
    await message.reply("–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!")

@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    mode = user_mode.get(message.from_user.id)
    if not mode:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        return

    photo = message.photo[-1]
    file_path = f"input_{message.from_user.id}.jpg"
    await photo.download(destination_file=file_path)

    result_path = f"output_{message.from_user.id}.jpg"
    # –û–±—Ä–∞–±–æ—Ç–∫–∞: –ø–æ–¥–º–µ–Ω–∞ –Ω–∞ –∑–∞–≥–ª—É—à–∫—É (–Ω–∞—Å—Ç–æ—è—â—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ–¥–∫–ª—é—á–∏–º –ø–æ–∑–∂–µ)
    if mode == "face":
        placeholder = "samples/face_example.jpg"
    else:
        placeholder = "samples/nature_example.jpg"

    await bot.send_photo(chat_id=message.chat.id, photo=InputFile(placeholder), caption="–í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç!")
    os.remove(file_path)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
